// Firestore Security Rules for CAS (Compare-And-Set) on rev field
//
// These rules enforce revision-based conflict detection:
// 1. New documents must have rev == 0
// 2. Updates must increment rev by exactly 1 (CAS check)
// 3. This prevents lost updates when multiple clients edit simultaneously

rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check if user is authenticated
    function isSignedIn() {
      return request.auth != null;
    }
    
    // Helper function to check if user owns the campaign
    function isOwner(campaign) {
      return isSignedIn() && request.auth.uid == campaign.data.ownerUid;
    }
    
    // Helper function to check if user is a member
    function isMember(campaign) {
      return isSignedIn() && 
             request.auth.uid in campaign.data.get('memberUids', []);
    }
    
    // Campaigns collection
    match /campaigns/{campaignId} {
      // Allow read if user is owner or member
      allow read: if isSignedIn() && 
                     (isOwner(resource) || isMember(resource));
      
      // Allow create if:
      // - User is authenticated
      // - Initial rev is 0
      // - User is setting themselves as owner
      allow create: if isSignedIn() && 
                       request.resource.data.rev == 0 &&
                       request.auth.uid == request.resource.data.ownerUid;
      
      // Allow update if:
      // - User is owner or member
      // - Rev is incremented by exactly 1 (CAS check)
      // - Cannot change ownerUid
      allow update: if (isOwner(resource) || isMember(resource)) &&
                       request.resource.data.rev == resource.data.rev + 1 &&
                       request.resource.data.ownerUid == resource.data.ownerUid;
      
      // Allow delete if user is owner
      allow delete: if isOwner(resource);
    }
  }
}
