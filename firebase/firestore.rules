rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Only authenticated users can access data.
    function isSignedIn() {
      return request.auth != null;
    }

    // A user is a campaign member if they are the owner or included in memberUids.
    function isCampaignMember(cid) {
      return isSignedIn() &&
        exists(/databases/$(database)/documents/campaigns/$(cid)) &&
        (
          get(/databases/$(database)/documents/campaigns/$(cid)).data.ownerUid == request.auth.uid ||
          (request.auth.uid in get(/databases/$(database)/documents/campaigns/$(cid)).data.memberUids)
        );
    }

    // Allow each authenticated user to read/write their own user document
    match /users/{uid} {
      allow read, write: if isSignedIn() && request.auth.uid == uid;
    }

    // Top-level campaigns collection
    match /campaigns/{cid} {
      // Creating a campaign: must be signed in and set themselves as owner.
      // Also require memberUids to include the owner to ensure consistent membership state.
      allow create: if isSignedIn() &&
        request.resource.data.ownerUid == request.auth.uid &&
        request.resource.data.memberUids != null &&
        (request.auth.uid in request.resource.data.memberUids);

      // Allow reads if the requester is the owner or a member â€” use resource.data so queries work
      allow read: if isSignedIn() && (
        resource.data.ownerUid == request.auth.uid ||
        (request.auth.uid in resource.data.memberUids)
      );

      // Updates and deletes require membership and must not change ownership
      allow update, delete: if isCampaignMember(cid) &&
        request.resource.data.ownerUid == resource.data.ownerUid;

      // All subcollections under a campaign inherit membership checks.
      match /{document=**} {
        allow read, write: if isCampaignMember(cid);
      }
    }

    // Joins collection: invite/join codes for campaigns
    match /joins/{code} {
      // Allow reading valid (non-expired) codes to any signed-in user
      allow read: if isSignedIn() &&
        (resource.data.ttl == null || request.time < resource.data.ttl);

      // Create/update/delete only by campaign members of the referenced campaign
      // For create/update, use request.resource; for delete, fall back to stored resource
      allow create: if isSignedIn() &&
        (request.resource.data.ttl == null || request.time < request.resource.data.ttl) &&
        isCampaignMember(request.resource.data.cid);

      allow update: if isSignedIn() &&
        (request.resource.data.ttl == null || request.time < request.resource.data.ttl) &&
        isCampaignMember(request.resource.data.cid);

      allow delete: if isSignedIn() && isCampaignMember(resource.data.cid);
    }

    // Deny everything else by default.
    match /{document=**} {
      allow read, write: if false;
    }
  }
}